
import { createClient } from '@supabase/supabase-js';
// Assuming types.ts is correctly generated by Supabase and available for Edge Functions.
// If not, you might need to adjust this path or ensure types are accessible.
// For now, let's assume a simplified Database type or adjust if needed.
// A common pattern is to have a simplified types definition or copy relevant parts for functions.
// For simplicity, we'll use 'any' here, but ideally, you'd share types.
// import type { Database } from '../../../src/integrations/supabase/types'; 
// The above path would be complex. Let's use a generic type for now or ensure types are properly shareable for edge functions.


const SUPABASE_URL = Deno.env.get('SUPABASE_URL');
const SUPABASE_SERVICE_ROLE_KEY = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY');

if (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  throw new Error("Supabase URL or Service Role Key is not defined in environment variables for admin client.");
}

// Using a generic Database type if specific types are hard to share.
// Replace 'any' with your actual Database type if it's accessible here.
export const supabase = createClient<any>(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

